// bintray plugin is used to upload artifacts to a bintray repo
plugins { id "com.jfrog.bintray" version "1.0" }

apply plugin: 'java'
apply from: 'http://dl.bintray.com/content/shemnon/javafx-gradle/8.1.1/javafx.plugin'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'org.hildan'
version = '1.4.1'
sourceCompatibility = '1.8'

description = 'A JavaFX program to view log files in a beautiful way.'

def mainClassName = "org.hildan.fxlog.FXLog"

repositories { mavenCentral() }

dependencies {
    compile 'org.controlsfx:controlsfx:8.40.10'
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.code.gson:gson:2.6.1'
    compile 'org.jetbrains:annotations:15.0'
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    testCompile 'junit:junit:4.+'
}

// to build a fat jar with all dependencies included
jar {
    manifest { attributes "Main-Class": mainClassName }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

javafx {
    // Application name and ID presented by target OS
    appID 'FX-Log'
    appName 'FX Log'
    vendor = "Hildan Software"

    // Main class of application
    mainClass mainClassName

    profiles {
        windows {
            category = 'Utils'
        }
    }

    // deploy/info attributes
    copyright = 'Copyright (c) 2016 Joffrey Bion'
    description = project.description
    licenseType = 'MIT'
    installSystemWide = true
    menu = true
    shortcut = true
}

bintrayUpload.dependsOn tasks.jfxDeploy

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : ''
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : ''
    configurations = ['archives']

    publish = true // the version should be auto published after an upload

    pkg {
        repo = project.hasProperty('bintrayRepoApps') ? project.bintrayRepoApps : ''
        name = project.name
        desc = project.description
        labels = ['log', 'viewer']

        String githubRepoName = project.name
        websiteUrl = 'https://github.com/joffrey-bion/' + githubRepoName
        issueTrackerUrl = 'https://github.com/joffrey-bion/' + githubRepoName + '/issues'
        vcsUrl = 'https://github.com/joffrey-bion/' + githubRepoName + '.git'

        licenses = ['MIT']
        version {
            vcsTag = 'v' + project.version
            gpg { sign = true }
        }
    }
}
